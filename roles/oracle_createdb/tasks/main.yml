---
# Copyright (c) IBM Corporation 2021
# tasks file for oracle database creation via dbca

- name: Checking /etc/oratab for {{ora_sid}} existence 
  command: "grep {{ora_sid}} /etc/oratab"
  register: db_check
  failed_when: db_check.rc > 2

- name: DB Check
  fail:
    msg: "DB {{ora_sid}} is already created"
  when: db_check.stdout | length > 0

- name: create {{ora_data_fs}} filesystem
  aix_filesystem:
    filesystem:    "{{ ora_data_fs }}"
    size: "{{ora_data_fs_size}}"
    state: present
    vg: "{{ora_fs_vg}}"

- name: mount {{ora_data_fs}}
  aix_filesystem:
    filesystem:   "{{ ora_data_fs  }}"
    state: mounted
  ignore_errors: yes

- name: Checking permission of {{ora_fs}}
  stat:
    path: "{{ora_data_fs}}"
  register: ora_dir

- name: changing ownership to {{ora_user}} on {{ora_data_fs}}
  file:
    path: "{{ora_data_fs}}"
    state: directory
    recurse: yes
    owner: "{{ora_user}}"
    group: "{{ora_group}}"
    mode: '0775'
  when: ora_dir.stat.exists and ora_dir.stat.pw_name != ora_user 

- include: crfs.yml
  with_items: "{{ ora_db_fs_list }}"
  loop_control:
    loop_var: item  

- name: Generating Database creation template file
  template:
    src: "../templates/sn.j2.{{ora_version}}"
    dest: "/tmp/{{ora_sid}}.{{ansible_date_time.epoch}}.dbt"
    owner: "{{ora_user}}"
    group: "{{ora_group}}"
    mode: '0774'

- name:  generating database creation script for {{ora_version}} oracle version
  template:
    src: ../templates/createdb.19.mfs.ksh
    dest: /tmp/createdb.19.mfs.ksh
    owner: "{{ora_user}}"
    group: "{{ora_group}}"
    mode: '0744'

- name: Creating database
  shell: /tmp/createdb.19.mfs.ksh
  become: yes
  become_method: su
  become_user: "{{ora_user}}"

- name: creating and configuring listener
  shell: "{{ora_home}}/bin/netca -silent -responsefile {{ora_home}}/assistants/netca/netca.rsp"
  become_method: su
  become: yes
  become_user:  "{{ora_user}}"

- name: Check Oracle PMON background process status
  shell: "ps -ef|grep ora_pmon_{{ora_sid}}|grep -v grep"
  register: process_check
  failed_when: process_check.rc>1

- debug:
    var: process_check

- name: DB check
  fail:
    msg: "DB {{ora_sid}} not is running"
  when: process_check.stdout | length == 0

- debug:
    msg: "DB {{ora_sid}} is running"
  when: process_check.stdout | length > 0  
