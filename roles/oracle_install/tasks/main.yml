---
# Copyright (c) IBM Corporation 2021
# tasks file for oracle_install
- name: detecting oracle version to install {{ ora_version }}
  set_fact:
    oracle_source_files: "{{oracledbaix19c}}"
  when: ora_version == "19.0.0.0.0"

- name: listing available disks
  shell: "lspv | awk '{ if ( $3==\"None\" ){ print $1 } }' "
  register: freedisks

- name: Fact
  set_fact:
    pvlist: "{{freedisks.stdout_lines}}"

- name: creating volume group
  aix_lvg:
    vg: "{{ora_fs_vg}}"
    pp_size: 4
    vg_type: scalable
    state: present
    pvs: "{{item}}"
  with_items:  "{{pvlist}}"
  when : ora_fs_vg != "rootvg"

- name: creating group {{ora_group}} with gid {{ora_group_gid}}
  group:
    name: "{{ora_group}}"
    gid:  "{{ora_group_gid}}"
    state: present

- name: creating group {{ora_oinstall_group}} with gid {{ora_oinstall_group_gid}}
  group:
    name: "{{ora_oinstall_group}}"
    gid:  "{{ora_oinstall_group_gid}}"
    state: present

- name: creating group {{ora_oper_group}} with gid {{ora_oper_group_gid}}
  group:
    name: "{{ora_oper_group}}"
    gid:  "{{ora_oper_group_gid}}"
    state: present

- name: creating user {{ora_user}} with uid {{ora_user_uid}}
  user:
    name: "{{ora_user}}"
    group: "{{ora_oinstall_group}}"
    groups: "{{ora_group}},{{ora_oper_group}}"
    append: yes
    uid: "{{ora_user_uid}}"

- name: create /oracle  create fs
  aix_filesystem:
    filesystem:    "{{ ora_fs }}"
    size: "{{ora_fs_size}}"
    state: present
    vg: "{{ora_fs_vg}}"

- name: mount /oracle
  aix_filesystem:
    filesystem:   "{{ ora_fs  }}"
    state: mounted
  ignore_errors: yes

- name: adding lines to {{ora_user}} .profile
  lineinfile:
    path: "/home/{{ora_user}}/.profile"
    state: present
    line: export TEMP=/tmp
    create: yes

- name: adding lines to {{ora_user}} .profile
  lineinfile:
    path: "/home/{{ora_user}}/.profile"
    state: present
    line: export TMPDIR=/tmp
    create: yes

- name: adding lines to {{ora_user}} .profile
  lineinfile:
    path: "/home/{{ora_user}}/.profile"
    state: present
    line: export TMP=/tmp
    create: yes

- name: adding lines to {{ora_user}} .profile
  lineinfile:
    path: "/home/{{ora_user}}/.profile"
    state: present
    line: export AIXTHREAD_SCOPE=S
    create: yes

- name: adding lines to {{ora_user}} .profile
  lineinfile:
    path: "/home/{{ora_user}}/.profile"
    state: present
    line: export ORACLE_HOME={{ora_home}}
    create: yes

- name: adding lines to {{ora_user}} .profile
  lineinfile:
    path: "/home/{{ora_user}}/.profile"
    state: present
    line: export ORACLE_BASE={{ora_fs}}
    create: yes

- name: adding lines to {{ora_user}} .profile
  lineinfile:
    path: "/home/{{ora_user}}/.profile"
    state: present
    line: export PATH=$PATH:{{ora_home}}/bin
    create: yes

- name: adding lines to {{ora_user}} .profile
  lineinfile:
    path: "/home/{{ora_user}}/.profile"
    state: present
    line: export PATH=$PATH:{{ora_home}}/OPatch
    create: yes

- name: adding lines to {{ora_user}} .profile
  lineinfile:
    path: "/home/{{ora_user}}/.profile"
    state: present
    line: export ORACLE_SID={{ora_sid}}
    create: yes

- name: Generating oracle response file Template a file to /etc/oracle_install_rsp_file{{ansible_date_time.epoch}}.rsp
  template:
    src: ../templates/oracle19c_install.rsp
    dest: "/tmp/oracle_install_rsp_file{{ansible_date_time.epoch}}.rsp"
    owner: "{{ora_user}}"
    group: "{{ora_group}}"
    mode: '0644'
  when: ora_version == '19.0.0.0.0'

- debug:
    msg: "{{ora_base}} {{ora_home}}"

- name: creating Oracle Software Home directory
  file:
    path: "{{ora_home}}"
    state: directory
    mode: '0755'
  when: ora_version == '19.0.0.0.0'

- name: creating Oracle Base directory
  file:
    path: "{{ora_base}}"
    state: directory
    mode: '0755'
  when: ora_version == '19.0.0.0.0'

- name: Checking permission of {{ora_fs}}
  stat:
    path: "{{ora_fs}}"
  register: ora_dir 

- name: changing ownership to {{ora_user}} on {{ora_fs}}
  file:
    path: "{{ora_fs}}"
    state: directory
    recurse: yes
    owner: "{{ora_user}}"
    group: "{{ora_group}}"
    mode: '0774'
  when: ora_dir.stat.exists and ora_dir.stat.pw_name != ora_user

- name: Check for file runInstaller
  stat:
    path: "{{ora_home}}/runInstaller"
  register: ora_file

- name: copying oracle Single instance source files
  unarchive:
    src: "{{item}}"
    dest: "{{ code_base_dir }}"
    keep_newer: yes
    owner: "{{ora_user}}"
    group: "{{ora_oinstall_group}}"
  loop:   "{{ oracle_source_files |flatten(levels=1) }}"
  when: not ora_file.stat.exists

- name: Running rootpre.sh
  shell: "{{code_base_dir}}/clone/rootpre.sh"
  when: ora_version == '19.0.0.0.0'

- name: install-home-db | Install Oracle Database Server
  shell: "{{code_base_dir}}/runInstaller -responseFile /tmp/oracle_install_rsp_file{{ansible_date_time.epoch}}.rsp -ignorePrereqFailure -silent -waitforcompletion"
  become: yes
  become_method: su
  become_user: "{{ora_user}}"
  environment:
    SKIP_ROOTPRE: "TRUE"
  register: rdbms_install
  when: ora_version == '19.0.0.0.0'
  failed_when: (rdbms_install.rc not in [0,6,254])
# 0 --> Successfull , 6 --> Successfull with Warnings, 254 --> DBhome Already Installed

- name: Running orainstRoot.sh
  shell:
    cmd: "{{ora_inventory}}/orainstRoot.sh"

- name: Running root.sh
  shell:
    cmd: "{{ora_home}}/root.sh -silent"
